/*
 * grunt-contrib-writeHTML
 * https://github.com/NYULibraries/awdl_site
 *
 * Copyright (c) 2014 New York University, contributors
 * Licensed under the MIT license.
 */

'use strict';

module.exports = function ( grunt ) {
	
  function writeHTML() {
    try {
      console.log ( 'We are doing something here' );	
    }
    catch (e) {
      console.log ( e ) ;
      grunt.log.error();
      grunt.fail.warn('Unable to Yay!', e);
    }
  }

  grunt.registerTask('writeHTML', 'Write HTML files from pages.json file.', function () {

    var path = require('path');
  
    var _ = require('underscore');

    /** @TODO: find if there is a more elegant solution to this */
    var root = path.normalize(__dirname + '/../../..');
  	
  	var transform = require('transform');

    /** force task into asynchronous mode and grab a handle to the "done" function. */
    var done = this.async();
    
    /** load configuration */
    var conf = grunt.file.readJSON( root + '/source/json/conf.json') ;
    
    /** copy source JavaScript files to build */
    grunt.file.recurse(root + '/source/js/', function callback (abspath, rootdir, subdir, filename) {
      if ( filename.match('.js') ) {
        grunt.file.copy( abspath, 'build/js/' + filename );
      }
    });
    
    /** load pages JSON Object*/ 
    var pages = grunt.file.readJSON( root + '/source/json/pages.json');
    
    try {
      /** iterate pages and transform in HTML*/
      _.each( pages , function ( element, index) {
        /** if callback is set, we need to load the JS module and call it */
        if ( ! _.isUndefined ( pages[index].callback )  ) {
          /** load JS module */
          var module = require( element.callback ) ;
          /** 
           * call module with parent configuration so that its possible 
           * to overwrite defaults. Our modules accept a Function callback
           * we pass "transform.html" as the default.
           * 
           */
          module[element.callback]( transform.dynamic, { parent_conf : conf } ) ;
        }
        else {
          /** all we need to construct this HTML page it's in the page Object */
          transform.html(root + '/build' + pages[index].route, index);
        }
      });
    }
    catch ( err ) {
      console.log ( err ) ;
      grunt.log.write('Unknown error').error();
    }
    
  });
  
};